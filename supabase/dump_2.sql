
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE SCHEMA IF NOT EXISTS "public";

ALTER SCHEMA "public" OWNER TO "pg_database_owner";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE TYPE "public"."EmployeeStatus" AS ENUM (
    'active',
    'terminated',
    'suspended',
    'onLeave',
    'onDuty'
);

ALTER TYPE "public"."EmployeeStatus" OWNER TO "postgres";

CREATE TYPE "public"."TicketStatus" AS ENUM (
    'unpaid',
    'paid',
    'cancelled',
    'transferred',
    'overdue'
);

ALTER TYPE "public"."TicketStatus" OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."_role_permissions" (
    "role_id" bigint NOT NULL,
    "permission_id" bigint NOT NULL
);

ALTER TABLE "public"."_role_permissions" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."_ticket_violations" (
    "ticket_id" bigint NOT NULL,
    "violation_id" bigint NOT NULL
);

ALTER TABLE "public"."_ticket_violations" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."employees" (
    "id" bigint NOT NULL,
    "first_name" character varying NOT NULL,
    "middle_name" character varying DEFAULT ''::character varying,
    "last_name" character varying NOT NULL,
    "suffix" character varying DEFAULT ''::character varying,
    "status" "public"."EmployeeStatus" DEFAULT 'active'::"public"."EmployeeStatus" NOT NULL,
    "birthdate" "date" NOT NULL,
    "employee_no" character varying,
    "role" "json" NOT NULL,
    "user_id" "uuid" NOT NULL,
    "created_by" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "updated_by" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "deleted_by" "uuid",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp without time zone
);

ALTER TABLE "public"."employees" OWNER TO "postgres";

ALTER TABLE "public"."employees" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."employees_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."impounds" (
    "id" bigint NOT NULL,
    "ticket_id" bigint NOT NULL,
    "site" character varying NOT NULL,
    "impounted_at" timestamp without time zone NOT NULL,
    "released_by" "uuid",
    "released_at" timestamp without time zone
);

ALTER TABLE "public"."impounds" OWNER TO "postgres";

ALTER TABLE "public"."impounds" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."impounds_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."notes" (
    "id" bigint NOT NULL,
    "title" character varying DEFAULT 'test'::character varying,
    "content" "text" DEFAULT 'test'::"text",
    "created_at" timestamp with time zone DEFAULT ("now"() AT TIME ZONE 'utc'::"text"),
    "user_id" "uuid" DEFAULT "auth"."uid"()
);

ALTER TABLE "public"."notes" OWNER TO "postgres";

ALTER TABLE "public"."notes" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."notes_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."permissions" (
    "id" bigint NOT NULL,
    "permission" character varying NOT NULL
);

ALTER TABLE "public"."permissions" OWNER TO "postgres";

ALTER TABLE "public"."permissions" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."permissions_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."roles" (
    "id" bigint NOT NULL,
    "role" character varying NOT NULL
);

ALTER TABLE "public"."roles" OWNER TO "postgres";

ALTER TABLE "public"."roles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."roles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."ticket_issue_location" (
    "id" bigint NOT NULL,
    "ticket_id" bigint NOT NULL,
    "address" character varying NOT NULL,
    "latitude" double precision NOT NULL,
    "longitude" double precision NOT NULL
);

ALTER TABLE "public"."ticket_issue_location" OWNER TO "postgres";

ALTER TABLE "public"."ticket_issue_location" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."ticket_issue_location_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."ticket_numbers_auto" (
    "ticket_number" bigint NOT NULL,
    "ticket_id" bigint NOT NULL
);

ALTER TABLE "public"."ticket_numbers_auto" OWNER TO "postgres";

ALTER TABLE "public"."ticket_numbers_auto" ALTER COLUMN "ticket_number" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."ticket_numbers_auto_ticket_number_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."ticket_numbers_manual" (
    "ticket_number" bigint NOT NULL,
    "ticket_id" bigint NOT NULL
);

ALTER TABLE "public"."ticket_numbers_manual" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."ticket_payment" (
    "id" bigint NOT NULL,
    "ticket_id" bigint NOT NULL,
    "or_number" character varying NOT NULL,
    "discounted" boolean DEFAULT false NOT NULL,
    "discount_amount" real DEFAULT '0'::real NOT NULL,
    "paid_amount" real DEFAULT '0'::real NOT NULL,
    "cashier" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "paid_at" timestamp without time zone DEFAULT "now"() NOT NULL,
    "updated_by" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "udpated_at" timestamp without time zone DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."ticket_payment" OWNER TO "postgres";

ALTER TABLE "public"."ticket_payment" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."ticket_payment_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."tickets" (
    "id" bigint NOT NULL,
    "first_name" character varying NOT NULL,
    "middle_name" character varying DEFAULT ''::character varying,
    "last_name" character varying NOT NULL,
    "suffix" character varying DEFAULT ''::character varying,
    "birthdate" "date",
    "status" "public"."TicketStatus" DEFAULT 'unpaid'::"public"."TicketStatus" NOT NULL,
    "violation_date" "date" NOT NULL,
    "violation_time" time without time zone NOT NULL,
    "vehicle_type_id" bigint NOT NULL,
    "enforcer_id" "uuid" NOT NULL,
    "created_by" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "udpated_by" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "deleted_by" "uuid",
    "created_at" timestamp without time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp without time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp without time zone
);

ALTER TABLE "public"."tickets" OWNER TO "postgres";

ALTER TABLE "public"."tickets" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."tickets_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."traffic_posts" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL,
    "address" character varying NOT NULL,
    "latitude" double precision NOT NULL,
    "longitude" double precision NOT NULL,
    "enabled" boolean DEFAULT true NOT NULL,
    "created_by" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "updated_by" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "deleted_by" "uuid",
    "created_at " timestamp without time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp without time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp without time zone
);

ALTER TABLE "public"."traffic_posts" OWNER TO "postgres";

ALTER TABLE "public"."traffic_posts" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."traffic_posts_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."vehicle_types" (
    "id" bigint NOT NULL,
    "type" character varying NOT NULL,
    "big_vehicle" boolean DEFAULT false NOT NULL,
    "hidden" boolean DEFAULT false NOT NULL,
    "created_by" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "updated_by" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "deleted_by" "uuid",
    "created_at" timestamp without time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp without time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp without time zone
);

ALTER TABLE "public"."vehicle_types" OWNER TO "postgres";

ALTER TABLE "public"."vehicle_types" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."vehicle_types_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."violations" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL,
    "enabled" boolean DEFAULT true NOT NULL,
    "created_by" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "updated_by" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "deleted_by" "uuid",
    "created_at" timestamp without time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp without time zone DEFAULT "now"() NOT NULL,
    "deleted_at" timestamp without time zone,
    "fine" "jsonb"
);

ALTER TABLE "public"."violations" OWNER TO "postgres";

ALTER TABLE "public"."violations" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."violations_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."employees"
    ADD CONSTRAINT "Employees_employee_no_key" UNIQUE ("employee_no");

ALTER TABLE ONLY "public"."employees"
    ADD CONSTRAINT "Employees_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."employees"
    ADD CONSTRAINT "Employees_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."tickets"
    ADD CONSTRAINT "Tickets_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."_role_permissions"
    ADD CONSTRAINT "_role_permissions_pkey" PRIMARY KEY ("role_id", "permission_id");

ALTER TABLE ONLY "public"."_ticket_violations"
    ADD CONSTRAINT "_ticket_violations_pkey" PRIMARY KEY ("ticket_id", "violation_id");

ALTER TABLE ONLY "public"."impounds"
    ADD CONSTRAINT "impounds_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."notes"
    ADD CONSTRAINT "notes_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."permissions"
    ADD CONSTRAINT "permissions_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."roles"
    ADD CONSTRAINT "roles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."ticket_issue_location"
    ADD CONSTRAINT "ticket_issue_location_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."ticket_numbers_auto"
    ADD CONSTRAINT "ticket_numbers_auto_pkey" PRIMARY KEY ("ticket_id");

ALTER TABLE ONLY "public"."ticket_numbers_manual"
    ADD CONSTRAINT "ticket_numbers_manual_pkey" PRIMARY KEY ("ticket_id");

ALTER TABLE ONLY "public"."ticket_numbers_manual"
    ADD CONSTRAINT "ticket_numbers_manual_ticket_id_key" UNIQUE ("ticket_id");

ALTER TABLE ONLY "public"."ticket_numbers_manual"
    ADD CONSTRAINT "ticket_numbers_manual_ticket_number_key" UNIQUE ("ticket_number");

ALTER TABLE ONLY "public"."ticket_payment"
    ADD CONSTRAINT "ticket_payment_or_number_key" UNIQUE ("or_number");

ALTER TABLE ONLY "public"."ticket_payment"
    ADD CONSTRAINT "ticket_payment_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."traffic_posts"
    ADD CONSTRAINT "traffic_posts_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."vehicle_types"
    ADD CONSTRAINT "vehicle_types_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."violations"
    ADD CONSTRAINT "violations_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."employees"
    ADD CONSTRAINT "public_Employees_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."employees"
    ADD CONSTRAINT "public_Employees_deleted_by_fkey" FOREIGN KEY ("deleted_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."employees"
    ADD CONSTRAINT "public_Employees_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."employees"
    ADD CONSTRAINT "public_Employees_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."tickets"
    ADD CONSTRAINT "public_Tickets_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."tickets"
    ADD CONSTRAINT "public_Tickets_deleted_by_fkey" FOREIGN KEY ("deleted_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."tickets"
    ADD CONSTRAINT "public_Tickets_enforcer_id_fkey" FOREIGN KEY ("enforcer_id") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."tickets"
    ADD CONSTRAINT "public_Tickets_udpated_by_fkey" FOREIGN KEY ("udpated_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."_role_permissions"
    ADD CONSTRAINT "public__role_permissions_permission_id_fkey" FOREIGN KEY ("permission_id") REFERENCES "public"."permissions"("id");

ALTER TABLE ONLY "public"."_role_permissions"
    ADD CONSTRAINT "public__role_permissions_role_id_fkey" FOREIGN KEY ("role_id") REFERENCES "public"."roles"("id");

ALTER TABLE ONLY "public"."_ticket_violations"
    ADD CONSTRAINT "public__ticket_violations_ticket_id_fkey" FOREIGN KEY ("ticket_id") REFERENCES "public"."tickets"("id");

ALTER TABLE ONLY "public"."_ticket_violations"
    ADD CONSTRAINT "public__ticket_violations_violation_id_fkey" FOREIGN KEY ("violation_id") REFERENCES "public"."violations"("id");

ALTER TABLE ONLY "public"."impounds"
    ADD CONSTRAINT "public_impounds_released_by_fkey" FOREIGN KEY ("released_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."impounds"
    ADD CONSTRAINT "public_impounds_ticket_id_fkey" FOREIGN KEY ("ticket_id") REFERENCES "public"."tickets"("id");

ALTER TABLE ONLY "public"."notes"
    ADD CONSTRAINT "public_notes_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."ticket_issue_location"
    ADD CONSTRAINT "public_ticket_issue_location_ticket_id_fkey" FOREIGN KEY ("ticket_id") REFERENCES "public"."tickets"("id");

ALTER TABLE ONLY "public"."ticket_numbers_auto"
    ADD CONSTRAINT "public_ticket_numbers_auto_ticket_id_fkey" FOREIGN KEY ("ticket_id") REFERENCES "public"."tickets"("id");

ALTER TABLE ONLY "public"."ticket_numbers_manual"
    ADD CONSTRAINT "public_ticket_numbers_manual_ticket_id_fkey" FOREIGN KEY ("ticket_id") REFERENCES "public"."tickets"("id");

ALTER TABLE ONLY "public"."ticket_payment"
    ADD CONSTRAINT "public_ticket_payment_cashier_fkey" FOREIGN KEY ("cashier") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."ticket_payment"
    ADD CONSTRAINT "public_ticket_payment_ticket_id_fkey" FOREIGN KEY ("ticket_id") REFERENCES "public"."tickets"("id");

ALTER TABLE ONLY "public"."ticket_payment"
    ADD CONSTRAINT "public_ticket_payment_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."traffic_posts"
    ADD CONSTRAINT "public_traffic_posts_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."traffic_posts"
    ADD CONSTRAINT "public_traffic_posts_deleted_by_fkey" FOREIGN KEY ("deleted_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."traffic_posts"
    ADD CONSTRAINT "public_traffic_posts_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."vehicle_types"
    ADD CONSTRAINT "public_vehicle_types_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."vehicle_types"
    ADD CONSTRAINT "public_vehicle_types_deleted_by_fkey" FOREIGN KEY ("deleted_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."vehicle_types"
    ADD CONSTRAINT "public_vehicle_types_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."violations"
    ADD CONSTRAINT "public_violations_created_by_fkey" FOREIGN KEY ("created_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."violations"
    ADD CONSTRAINT "public_violations_deleted_by_fkey" FOREIGN KEY ("deleted_by") REFERENCES "auth"."users"("id");

ALTER TABLE ONLY "public"."violations"
    ADD CONSTRAINT "public_violations_updated_by_fkey" FOREIGN KEY ("updated_by") REFERENCES "auth"."users"("id");

CREATE POLICY "Enable insert for authenticated users only" ON "public"."notes" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable read access for all users" ON "public"."notes" FOR SELECT TO "authenticated" USING (true);

ALTER TABLE "public"."notes" ENABLE ROW LEVEL SECURITY;

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."_role_permissions" TO "anon";
GRANT ALL ON TABLE "public"."_role_permissions" TO "authenticated";
GRANT ALL ON TABLE "public"."_role_permissions" TO "service_role";

GRANT ALL ON TABLE "public"."_ticket_violations" TO "anon";
GRANT ALL ON TABLE "public"."_ticket_violations" TO "authenticated";
GRANT ALL ON TABLE "public"."_ticket_violations" TO "service_role";

GRANT ALL ON TABLE "public"."employees" TO "anon";
GRANT ALL ON TABLE "public"."employees" TO "authenticated";
GRANT ALL ON TABLE "public"."employees" TO "service_role";

GRANT ALL ON SEQUENCE "public"."employees_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."employees_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."employees_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."impounds" TO "anon";
GRANT ALL ON TABLE "public"."impounds" TO "authenticated";
GRANT ALL ON TABLE "public"."impounds" TO "service_role";

GRANT ALL ON SEQUENCE "public"."impounds_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."impounds_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."impounds_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."notes" TO "anon";
GRANT ALL ON TABLE "public"."notes" TO "authenticated";
GRANT ALL ON TABLE "public"."notes" TO "service_role";

GRANT ALL ON SEQUENCE "public"."notes_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."notes_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."notes_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."permissions" TO "anon";
GRANT ALL ON TABLE "public"."permissions" TO "authenticated";
GRANT ALL ON TABLE "public"."permissions" TO "service_role";

GRANT ALL ON SEQUENCE "public"."permissions_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."permissions_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."permissions_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."roles" TO "anon";
GRANT ALL ON TABLE "public"."roles" TO "authenticated";
GRANT ALL ON TABLE "public"."roles" TO "service_role";

GRANT ALL ON SEQUENCE "public"."roles_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."roles_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."roles_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."ticket_issue_location" TO "anon";
GRANT ALL ON TABLE "public"."ticket_issue_location" TO "authenticated";
GRANT ALL ON TABLE "public"."ticket_issue_location" TO "service_role";

GRANT ALL ON SEQUENCE "public"."ticket_issue_location_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."ticket_issue_location_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."ticket_issue_location_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."ticket_numbers_auto" TO "anon";
GRANT ALL ON TABLE "public"."ticket_numbers_auto" TO "authenticated";
GRANT ALL ON TABLE "public"."ticket_numbers_auto" TO "service_role";

GRANT ALL ON SEQUENCE "public"."ticket_numbers_auto_ticket_number_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."ticket_numbers_auto_ticket_number_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."ticket_numbers_auto_ticket_number_seq" TO "service_role";

GRANT ALL ON TABLE "public"."ticket_numbers_manual" TO "anon";
GRANT ALL ON TABLE "public"."ticket_numbers_manual" TO "authenticated";
GRANT ALL ON TABLE "public"."ticket_numbers_manual" TO "service_role";

GRANT ALL ON TABLE "public"."ticket_payment" TO "anon";
GRANT ALL ON TABLE "public"."ticket_payment" TO "authenticated";
GRANT ALL ON TABLE "public"."ticket_payment" TO "service_role";

GRANT ALL ON SEQUENCE "public"."ticket_payment_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."ticket_payment_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."ticket_payment_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."tickets" TO "anon";
GRANT ALL ON TABLE "public"."tickets" TO "authenticated";
GRANT ALL ON TABLE "public"."tickets" TO "service_role";

GRANT ALL ON SEQUENCE "public"."tickets_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."tickets_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."tickets_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."traffic_posts" TO "anon";
GRANT ALL ON TABLE "public"."traffic_posts" TO "authenticated";
GRANT ALL ON TABLE "public"."traffic_posts" TO "service_role";

GRANT ALL ON SEQUENCE "public"."traffic_posts_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."traffic_posts_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."traffic_posts_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."vehicle_types" TO "anon";
GRANT ALL ON TABLE "public"."vehicle_types" TO "authenticated";
GRANT ALL ON TABLE "public"."vehicle_types" TO "service_role";

GRANT ALL ON SEQUENCE "public"."vehicle_types_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."vehicle_types_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."vehicle_types_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."violations" TO "anon";
GRANT ALL ON TABLE "public"."violations" TO "authenticated";
GRANT ALL ON TABLE "public"."violations" TO "service_role";

GRANT ALL ON SEQUENCE "public"."violations_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."violations_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."violations_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
